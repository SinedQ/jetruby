Что такое ORM, в чем основная задача?
    ORM - это метод используемый в современной разработке ПО для абстрагирования взаимодействия между языком программирования и системой управления реляционными базами данных.
    Основная задача ORM - связать объекты приложения с таблицами в реляционной базе данных.

В чем принцип работы паттерна Active Record?
    Принцип работы паттерна Active Record заключается в том, что таблица базы данных или представление обернуты в классы. 

Какие ассоциации можно задать в моделях и как?
    belongs_to - Она используется, когда один объект модели принадлежит другому объекту модели
    has_one -  Она используется, когда один объект модели имеет только один связанный объект модели
    has_many - Она используется, когда один объект модели имеет много связанных объектов модели
    has_and_belongs_to_many - Она используется, когда множество объектов модели связано с множеством других объектов модели

Что такое миграция? зачем еужен schema.rb файл?
    Миграция - это способ изменения структуры базы данных в Ruby on Rails. Миграции позволяют описать преобразования на языке Ruby, которые затем могут быть применены к базе данных.
    Файл schema.rb нужен для того, чтобы Ruby on Rails мог понимать текущую структуру базы данных и использовать ее для генерации SQL-запросов и других операций.

Сколько уровней валидации есть в обычном приложении? Как написать свою?
    В обычном приложении в Ruby on Rails есть три уровня валидации:
        1. Уровень модели - валидация происходит внутри модели и проверяет правильность введенных данных. Например, можно проверить, что поле не пустое или что значение уникально.
        2. Уровень контроллера - валидация происходит в контроллере и проверяет, что данные, полученные из формы, корректны. Например, можно проверить, что все обязательные поля заполнены.
        3.Уровень формы - валидация происходит на стороне клиента и проверяет, что данные, введенные пользователем, соответствуют определенным правилам. 
        Например, можно проверить, что поле содержит только цифры или что email имеет правильный формат.
    Чтобы написать свою валидацию в модели Ruby on Rails, нужно использовать метод validate и передать ему блок с проверками. 

Что такое коллбеки и какой их практический смысл?
    Коллбеки - это методы, которые вызываются автоматически при определенных событиях в жизненном цикле объекта модели.
    Например, при создании, обновлении или удалении объекта модели.
    Коллбеки позволяют выполнять определенные действия перед или после выполнения определенных операций с объектом модели.

В чем заключается n+1 проблема? Как ее можно решить?
    Проблема N+1 - это проблема производительности, которая возникает при выполнении запросов к базе данных в Ruby on Rails (и не только). 
    Она возникает, когда мы запрашиваем одну сущность из базы данных, но у этой сущности есть связанные сущности, которые мы также хотим получить. 
    В этом случае, если мы не используем правильный подход, может произойти следующее:
        1.Генерируется один запрос к базе данных, чтобы получить интересующую нас сущность.
        2.Затем генерируется N запросов к базе данных, чтобы получить связанные сущности.
    Таким образом, количество запросов к базе данных увеличивается в N раз, что может существенно замедлить работу приложения.
    Для решения проблемы N+1 можно использовать различные подходы. 
    Один из них - использование метода includes при выполнении запроса к базе данных. 
    Метод includes позволяет загрузить связанные сущности вместе с основной сущностью в одном запросе.
